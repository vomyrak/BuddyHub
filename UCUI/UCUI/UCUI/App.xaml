<<<<<<< HEAD
ï»¿<Application x:Class="UCUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:UCUI"
             xmlns:mod="clr-namespace:UCUI.Models"
             StartupUri="MainWindow.xaml">
  <Application.Resources>
    <Color x:Key='myGray'>#FF353535</Color>
    <Color x:Key='myGold'>#FFEBCB31</Color>
    <SolidColorBrush x:Key='GoldBrush'
                     Color='{StaticResource myGold}' />
    <SolidColorBrush x:Key='ButtonBrush'
                     Color='Gray' />
    <SolidColorBrush x:Key='ThemeBrush'
                     Color='#FF353535' />

    <mod:AnimationCondition x:Key="ConditionKey" />

    <!--Used in GlowFocus-->
    <Style TargetType="{x:Type Rectangle}"
                       x:Key='Glower'>
      <Setter Property="RenderTransformOrigin"
              Value="0.5 0.5" />
      <Setter Property="RenderTransform">
        <Setter.Value>
          <RotateTransform />
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <EventTrigger RoutedEvent="Rectangle.Loaded"> 
          <BeginStoryboard>
              <Storyboard>
              <ColorAnimation To="#FFEBCB31"
                                      Storyboard.TargetProperty="(Rectangle.Stroke).(SolidColorBrush.Color)"
                                      FillBehavior='HoldEnd'
                                AutoReverse="True"
                                      Duration="0:0:0.75" 
                                RepeatBehavior="Forever"/>
              </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
      </Style.Triggers>
    </Style>
<!--Custom FocusVisualStyle-->
    <Style x:Key="GlowFocus">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle x:Name="Highlight"
              Margin="-6" 
                       StrokeThickness="7" 
                       Stroke="#FFD9AE2C"
                       RadiusX="20"
                       RadiusY="20"
                       Style="{StaticResource Glower}"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    
    
    <!--Static resource storyboard for Pusher button-->
    <Storyboard x:Key='PushDown'>
      <ThicknessAnimation Storyboard.TargetProperty="Margin"
                          Storyboard.TargetName="_top"
                          Duration="0:0:0.1"
                          From="0,0,0,10"
                          To="0,10,0,0" />
      <ThicknessAnimation Storyboard.TargetProperty="Margin"
                          Storyboard.TargetName="_bottom"
                          Duration="0:0:0.1"
                          From="0,2,0,0"
                          To="0,12,0,0" />
    </Storyboard>
    <Storyboard x:Key='PushUp'>
      <ThicknessAnimation Storyboard.TargetProperty="Margin"
                          Storyboard.TargetName="_top"
                          Duration="0:0:0.1"
                          From="0,10,0,0"
                          To="0,0,0,10" />
      <ThicknessAnimation Storyboard.TargetProperty="Margin"
                          Storyboard.TargetName="_bottom"
                          Duration="0:0:0.1"
                          From="0,12,0,0"
                          To="0,2,0,0" />
    </Storyboard>

    <!--Shaker Style-->
    <Style TargetType="{x:Type Button}"
           x:Key='Shaker'>
      <Setter Property="RenderTransformOrigin"
              Value="0.5 0.5" />
      <Setter Property="FocusVisualStyle"
              Value="{StaticResource GlowFocus}"/>
      <Setter Property="RenderTransform">
        <Setter.Value>
          <RotateTransform />
        </Setter.Value>
      </Setter>

      <Setter Property='Background'
              Value='{DynamicResource ButtonBrush}' />
      <Setter Property='Foreground'
              Value='White' />
      <Setter Property='FontFamily'
              Value='Calibri' />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">

            <Grid>
              <Rectangle Name='bg'
                         Fill='{TemplateBinding Background}'
                         RadiusX='6'
                         RadiusY='6' />
              <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver"
                       Value="True">
                <Setter Property="Fill"
                        TargetName="bg"
                        Value="#FFEBCB31" />
              </Trigger>
              <Trigger Property='IsPressed'
                       Value="True">
                <Setter Property="Fill"
                        TargetName="bg"
                        Value="#FFD9AE2C" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>

      <Style.Triggers>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding='{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}'
                       Value='True' />
            <Condition Binding='{Binding IsShake}'
                       Value='True' />
          </MultiDataTrigger.Conditions>

          <MultiDataTrigger.EnterActions>
            <BeginStoryboard>
              <Storyboard TargetProperty="RenderTransform.Angle">
                <DoubleAnimation From="0"
                                 To="5"
                                 Duration="0:0:0.05"
                                 AutoReverse="True"
                                 FillBehavior="Stop" />
                <DoubleAnimation BeginTime="0:0:0.05"
                                 From="5"
                                 To="-5"
                                 Duration="0:0:0.1"
                                 AutoReverse="True"
                                 FillBehavior="Stop" />
                <DoubleAnimation BeginTime="0:0:0.2"
                                 From="-5"
                                 To="0"
                                 Duration="0:0:0.1"
                                 AutoReverse="False"
                                 FillBehavior="Stop" />
              </Storyboard>
            </BeginStoryboard>
          </MultiDataTrigger.EnterActions>
        </MultiDataTrigger>
        <!--Jitter animation-->
      </Style.Triggers>
    </Style>

    <!--Pusher Style-->
    <Style TargetType="Button"
           x:Key='Pusher'>
      <Setter Property='Background'
              Value='{DynamicResource ButtonBrush}' />
      <Setter Property='Foreground'
              Value='White' />
      <Setter Property='FontFamily'
              Value='Calibri' />
      <Setter Property='FocusVisualStyle'
              Value='{StaticResource GlowFocus}' />

      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">

            <Grid>

              <Rectangle x:Name='_bottom'
                         Fill="{DynamicResource ThemeBrush}"
                         RadiusX="20"
                         RadiusY="20"
                         Margin='0,2,0,0' />

              <Border x:Name='_top'
                      Margin='0,0,0,10'>
                <Grid>
                  <Rectangle x:Name='_color'
                             Fill="{TemplateBinding Background}"
                             RadiusX="20"
                             RadiusY="20" />
                  <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center" />
                </Grid>
              </Border>
            </Grid>

            <ControlTemplate.Triggers>
              <!--Press down animation-->
              <DataTrigger Value='True'>
                <DataTrigger.Binding>
                  <MultiBinding Converter="{StaticResource ConditionKey}">
                    <Binding RelativeSource="{RelativeSource self}"
                             Path="Name"
                             Mode="OneWay" />
                    <Binding Path='ButtonKey'
                             Mode="OneWay" />
                    <Binding RelativeSource='{RelativeSource Self}'
                             Path='IsPressed'
                             Mode='OneWay' />
                    <Binding RelativeSource='{RelativeSource Self}'
                             Path='IsMouseOver'
                             Mode='OneWay' />
                    <Binding Path='IsHover'
                             Mode='OneWay' />

                  </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                  <BeginStoryboard Storyboard='{StaticResource PushDown}' />
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation To="#FFD9AE2C"
                                      Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                      FillBehavior='HoldEnd'
                                      Duration="0:0:0.05" />
                    </Storyboard>
                  </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                  <BeginStoryboard Storyboard='{StaticResource PushUp}' />
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation To="Gray"
                                      Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                      FillBehavior='Stop'
                                      Duration="0:0:0.05" />
                    </Storyboard>
                  </BeginStoryboard>
                </DataTrigger.ExitActions>
              </DataTrigger>

              <DataTrigger Value="True">
                <DataTrigger.Binding>
                  <Binding Path='IsOpen'
                             Mode="OneWay" />
                </DataTrigger.Binding>
                <Setter Property="Focusable"
                        Value="False"/>
              </DataTrigger>

              <DataTrigger Value="False">
                <DataTrigger.Binding>
                  <Binding Path='IsOpen'
                             Mode="OneWay" />
                </DataTrigger.Binding>
                <Setter Property="Focusable"
                        Value="True"/>
              </DataTrigger>

              <Trigger Property="IsMouseOver"
                       Value="True">
                <Setter Property="Fill"
                        TargetName="_color"
                        Value="#FFEBCB31" />
              </Trigger>
              <Trigger Property='IsPressed'
                       Value="True">
                <Setter Property="Fill"
                        TargetName="_color"
                        Value="#FFD9AE2C" />
              </Trigger>

            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>


    <!--Combobox template used:-->
    <Style x:Key="ComboBoxToggleButton"
           TargetType="ToggleButton">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="32" />
              </Grid.ColumnDefinitions>
              <Border x:Name="Border"
                      Grid.ColumnSpan="2"
                      CornerRadius="8"
                      Background="{TemplateBinding Background}"
                      BorderBrush="#F6F6F6"
                      BorderThickness="1" />

              <Path x:Name="Arrow"
                    Grid.Column="1"
                    Fill="{TemplateBinding Foreground}"
                    Stroke="{TemplateBinding Foreground}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTextBox"
                     TargetType="TextBox">
      <Border x:Name="PART_ContentHost"
              Focusable="True" />
    </ControlTemplate>

    <Style x:Key="theComboBox"
           TargetType="{x:Type ComboBox}">
      <Setter Property="Foreground"
              Value="Black" />
      <Setter Property="BorderBrush"
              Value="LightGray" />
      <Setter Property="FontSize"
              Value="20" />
      <Setter Property="MinWidth"
              Value="150" />
      <Setter Property="MinHeight"
              Value="35" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ComboBox">
            <Grid>
              <ToggleButton Cursor="Hand"
                            Name="ToggleButton"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            Style="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode='Press' />

              <ContentPresenter Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
              <Popup Name="Popup"
                     Placement='Bottom'
                     IsOpen="{TemplateBinding IsDropDownOpen}"
                     AllowsTransparency="True"
                     Focusable="False"
                     PopupAnimation='Fade'>
                <Grid Name="DropDown"
                      SnapsToDevicePixels="True"
                      MinWidth="{TemplateBinding ActualWidth}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                  <Border CornerRadius="8"
                          x:Name="DropDownBorder"
                          Background="White"
                          BorderThickness="2"
                          BorderBrush="LightGray">
                    <ScrollViewer Margin="4,6,4,6"
                                  SnapsToDevicePixels="True">
                      <StackPanel IsItemsHost="True"
                                  KeyboardNavigation.DirectionalNavigation='Contained' />
                    </ScrollViewer>
                  </Border>
                </Grid>
              </Popup>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="IsKeyboardFocusWithin"
                 Value="True">
          <Setter Property="IsDropDownOpen"
                  Value="True"/>
        </Trigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}"
           TargetType="{x:Type ComboBoxItem}">
      <Setter Property="HorizontalAlignment"
              Value="Stretch" />
      <Setter Property="VerticalAlignment"
              Value="Stretch" />
      <Setter Property="FontSize"
              Value="13" />
      <Setter Property="OverridesDefaultStyle"
              Value="True" />
      <Setter Property="IsTabStop" Value="True" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ComboBoxItem">
            <Border Name="Border"
                    Padding="5"
                    Margin="2"
                    BorderThickness="2"
                    CornerRadius="5"
                    Background="Transparent"
                    BorderBrush="Transparent">
              <TextBlock TextAlignment="Left">
                            <ContentPresenter />
              </TextBlock>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsHighlighted"
                       Value="true">
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#FFE4E4E4" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Application.Resources>

</Application>
  
=======
ï»¿<Application x:Class="UCUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:UCUI"
             xmlns:mod="clr-namespace:UCUI.Models"
             StartupUri="MainWindow.xaml">
  <Application.Resources>
    
    <mod:AnimationCondition x:Key="ConditionKey" />
    <!--Static resource storyboard for Pusher button-->
    <Storyboard x:Key='PushDown'>
      <ThicknessAnimation Storyboard.TargetProperty="Margin"
                          Storyboard.TargetName="_top"
                          Duration="0:0:0.1"
                          From="0,0,0,10"
                          To="0,10,0,0" />
      <ThicknessAnimation Storyboard.TargetProperty="Margin"
                          Storyboard.TargetName="_bottom"
                          Duration="0:0:0.1"
                          From="0,2,0,0"
                          To="0,12,0,0" />
    </Storyboard>
    <Storyboard x:Key='PushUp'>
      <ThicknessAnimation Storyboard.TargetProperty="Margin"
                          Storyboard.TargetName="_top"
                          Duration="0:0:0.1"
                          From="0,10,0,0"
                          To="0,0,0,10" />
      <ThicknessAnimation Storyboard.TargetProperty="Margin"
                          Storyboard.TargetName="_bottom"
                          Duration="0:0:0.1"
                          From="0,12,0,0"
                          To="0,2,0,0" />
    </Storyboard>

    <!--Shaker Style-->
    <Style TargetType="{x:Type Button}"
           x:Key='Shaker'>
      <Setter Property="RenderTransformOrigin"
              Value="0.5 0.5" />
      <Setter Property="RenderTransform">
        <Setter.Value>
          <RotateTransform />
        </Setter.Value>
      </Setter>

      <Setter Property='Background'
              Value='Gray' />
      <Setter Property='Foreground'
              Value='White' />
      <Setter Property='FontFamily'
              Value='Calibri' />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">

            <Grid>
              <Rectangle Name='bg'
                         Fill='Gray'
                         RadiusX='6'
                         RadiusY='6' />
              <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver"
                       Value="True">
                <Setter Property="Fill"
                        TargetName="bg"
                        Value="#FFEBCB31" />
              </Trigger>
              <Trigger Property='IsPressed'
                       Value="True">
                <Setter Property="Fill"
                        TargetName="bg"
                        Value="#FFD9AE2C" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>

      <Style.Triggers>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding='{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}'
                       Value='True' />
            <Condition Binding='{Binding IsShake}'
                       Value='True' />
          </MultiDataTrigger.Conditions>

          <MultiDataTrigger.EnterActions>
            <BeginStoryboard>
              <Storyboard TargetProperty="RenderTransform.Angle">
                <DoubleAnimation From="0"
                                 To="5"
                                 Duration="0:0:0.05"
                                 AutoReverse="True"
                                 FillBehavior="Stop" />
                <DoubleAnimation BeginTime="0:0:0.05"
                                 From="5"
                                 To="-5"
                                 Duration="0:0:0.1"
                                 AutoReverse="True"
                                 FillBehavior="Stop" />
                <DoubleAnimation BeginTime="0:0:0.2"
                                 From="-5"
                                 To="0"
                                 Duration="0:0:0.1"
                                 AutoReverse="False"
                                 FillBehavior="Stop" />
              </Storyboard>
            </BeginStoryboard>
          </MultiDataTrigger.EnterActions>
        </MultiDataTrigger>
        <!--Jitter animation-->
      </Style.Triggers>
    </Style>

    <!--Pusher Style-->
    <Style TargetType="Button"
           x:Key='Pusher'>
      <Setter Property='Background'
              Value='Gray' />
      <Setter Property='Foreground'
              Value='White' />
      <Setter Property='FontFamily'
              Value='Calibri' />

      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">

            <Grid>

              <Rectangle x:Name='_bottom'
                         Fill="#FF353535"
                         RadiusX="20"
                         RadiusY="20"
                         Margin='0,2,0,0' />

              <Border x:Name='_top'
                      Margin='0,0,0,10'>
                <Grid>
                  <Rectangle x:Name='_color'
                             Fill="{TemplateBinding Background}"
                             RadiusX="20"
                             RadiusY="20" />
                  <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center" />
                </Grid>
              </Border>
            </Grid>

            <ControlTemplate.Triggers>
              <!--Press down animation-->
              <DataTrigger Value='True'>
                <DataTrigger.Binding>
                  <MultiBinding Converter="{StaticResource ConditionKey}">
                    <Binding RelativeSource="{RelativeSource self}"
                             Path="Name"
                             Mode="OneWay" />
                    <Binding Path='ButtonKey'
                             Mode="OneWay" />
                    <Binding RelativeSource='{RelativeSource Self}'
                             Path='IsPressed'
                             Mode='OneWay' />
                    <Binding RelativeSource='{RelativeSource Self}'
                             Path='IsMouseOver'
                             Mode='OneWay' />
                    <Binding Path='IsHover'
                             Mode='OneWay' />

                  </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                  <BeginStoryboard Storyboard='{StaticResource PushDown}' />
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation To="#FFD9AE2C"
                                      Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                      FillBehavior='HoldEnd'
                                      Duration="0:0:0.05" />
                    </Storyboard>
                  </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                  <BeginStoryboard Storyboard='{StaticResource PushUp}' />
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation To="Gray"
                                      Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                      FillBehavior='HoldEnd'
                                      Duration="0:0:0.05" />
                    </Storyboard>
                  </BeginStoryboard>
                </DataTrigger.ExitActions>
              </DataTrigger>

              <Trigger Property="IsMouseOver"
                       Value="True">
                <Setter Property="Fill"
                        TargetName="_color"
                        Value="#FFEBCB31" />
              </Trigger>
              <Trigger Property='IsPressed'
                       Value="True">
                <Setter Property="Fill"
                        TargetName="_color"
                        Value="#FFD9AE2C" />
              </Trigger>

            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

  </Application.Resources>

</Application>
  
>>>>>>> rachel
